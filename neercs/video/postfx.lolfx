-- GLSL.Vert --

#version 120

void main()
	{
	gl_Position=gl_Vertex;
	gl_TexCoord[0]=gl_MultiTexCoord0;
	}

-- GLSL.Frag --

#version 120

uniform sampler2D texture;
uniform vec2 screen_size;
uniform float time;
uniform vec2 deform;
uniform vec4 ghost1;
uniform vec4 ghost2;
uniform vec3 filter;
uniform vec3 color;
uniform float aberration;
uniform vec4 moire_h;
uniform vec4 moire_v;
uniform vec4 scanline_h;
uniform vec4 scanline_v;
uniform vec2 corner;
uniform float vignetting;
uniform float flash;
uniform float sync;

vec2 screen(in vec2 p,in float radius)
	{
	float d=deform.x+sync*0.0625;
	return p*(1.5-(radius*cos(p.x*d)+radius*cos(p.y*d)))-0.5;
	}

vec3 get_color(in sampler2D tex,in vec2 p)
	{
	return texture2D(tex,clamp(p,-1.0,0.0)).xyz;
	}

float letterbox(in vec2 p,in float radius,in float smooth)
	{
	return 1.0-smoothstep(smooth,1.0,length(max(abs(p*2.0+1.0)-vec2(radius),0.0))+radius);
	}

void main(void)
	{
	vec2 q=gl_FragCoord.xy/screen_size.xy;
	vec2 p=-1.0+2.0*gl_FragCoord.xy/screen_size.xy;
	p.y+=0.025*sync;
	vec2 z =screen(p,deform.y);
	vec2 z1=screen(p,deform.y+ghost1.z*0.01);
	vec2 z2=screen(p,deform.y+ghost2.z*0.01);
	float mask=q.x*(6.0-q.x*6.0)*q.y*(6.0-q.y*6.0);

	vec3 source=get_color(texture,z);
	vec3 g1=get_color(texture,z1-ghost1.xy);
	vec3 g2=get_color(texture,z2-ghost2.xy);

	float v=aberration/float(screen_size.x)+aberration/float(screen_size.x)*(2.0-mask);

	vec3 ca;
	ca.x=get_color(texture,vec2(z.x-v,z.y)).x;
	ca.y=get_color(texture,vec2(z.x  ,z.y)).y;
	ca.z=get_color(texture,vec2(z.x+v,z.y)).z;

	vec3 c=source+g1*g1*ghost1.w+g2*g2*ghost2.w;			// mix

	float a=(c.x+c.y+c.z)/3.0;
	vec3 g=vec3(a,a,a);
	c=mix(c,g,color.z);										// gray
	c*=filter;												// filter
	c*=color.x;												// brightness
	c=0.5+(c-0.5)*color.y;									// contrast

	c+=flash;												// flash
	c+=ca;													// chromatic aberration
	c*=moire_h.x+moire_h.y*sin(z.y*float(screen_size.y*moire_h.z))*sin(0.5+z.x*float(screen_size.x*moire_h.w));	// moire h
	c*=moire_v.x+moire_v.y*sin(z.x*float(screen_size.x*moire_v.z))*sin(0.5+z.y*float(screen_size.y*moire_v.w));	// moire v
	c*=scanline_h.x+scanline_h.y*cos(z.y*float(screen_size.y*scanline_h.z+scanline_h.w));	// scanline h
	c*=scanline_v.x+scanline_v.y*cos(z.x*float(screen_size.x*scanline_v.z+scanline_v.w));	// scanline v
	c*=(mask-vignetting);									// vignetting
	c*=letterbox(z,corner.x,corner.y);						// letterbox
	gl_FragColor=vec4(c,1.0);
	}